<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on SLC is</title><link>https://slc.is/tags/linux/</link><description>Recent content in Linux on SLC is</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 04 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://slc.is/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Degrees of Randomness and the Law of Large Numbers</title><link>https://slc.is/posts/randomness/</link><pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate><guid>https://slc.is/posts/randomness/</guid><description>In a previous post comparing quantum and avalanche diode methods of true random number generation, an interesting pattern emerged. The quantum random numbers would pass more STS tests than avalanche diode random numbers. Seemingly, the quantum RNG converges to a mean before the diode RNG.
This should not be the case since both methods produce true random numbers, so this post will be exploring if this is actually occurring and why.</description></item><item><title>Installing Manjaro Linux on Chromebook</title><link>https://slc.is/posts/manjarochromebook/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://slc.is/posts/manjarochromebook/</guid><description>1. Enable Developer Mode You&amp;rsquo;ll need to hold the escape (esc) and refresh (‚ü≥) keys together. While holding them, press the power button to turn on the Chromebook.
Chrome will get nervous and show this screen.
When you boot, you&amp;rsquo;ll need to access the disabled verified boot with control and D (ctrl+d).
Now, press enter to turn OS verification off.
Once the Chromebook boots, shut it down.
2. Enable Debug Mode You can do this by removing the battery.</description></item><item><title>Efficient Solar-Powered Website</title><link>https://slc.is/posts/solarpoweredsite/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><guid>https://slc.is/posts/solarpoweredsite/</guid><description>After seeing Kris&amp;rsquo; solar-powered website, I decided I wanted my own to be the same. This conveniently followed the release of the Raspberry Pi Zero 2 W, a low-power SoC. I purchased this board since I doubt my website will warrant anything stronger than a Raspberry Pi and it enables solar-power with its small energy footprint.
There is a thorough article comparing servers&amp;rsquo; abilities handling different types of data; however, I opted to use Go&amp;rsquo;s built-in web server.</description></item><item><title>Creating My Site</title><link>https://slc.is/posts/creatingmysite/</link><pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate><guid>https://slc.is/posts/creatingmysite/</guid><description>I bought my first domain through Google Domains and actually hosted my site through Google&amp;rsquo;s website builder. It really is a great free builder with solid SEO, but I&amp;rsquo;m a programmer, so I wanted to program.
Distributed networks are an amazing technology, and I was drawn to IPFS hosting. I used Pinata to pin my new site, but when I tried using an HTTP request for a different page, it failed.</description></item><item><title>Raspberry Pi and Caenorhabditis Elegans</title><link>https://slc.is/posts/wormpi/</link><pubDate>Sat, 20 Aug 2016 00:00:00 +0000</pubDate><guid>https://slc.is/posts/wormpi/</guid><description>One of my first projects was AI projects was taking the OpenWorm C. Elegans brain map and connecting it to a Raspberry Pi. The Pi was integrated with Lego Mindstorms, so the Lego motors would move in the direction the worm wanted to go.
# BrickPi3 Worm Brain # Written by Spencer Churchill 2016, in Python 2.7 # The BrickPi3 Worm Brain uses a Postsynaptic dictionary based on the C Elegans Connectome Model # This application can be ran on the Raspberry Pi BrickPi robot with an ultrasonic sensor that represents Nose Touch when activated from BrickPi import * import time BrickPiSetup() # setup the serial port for communication BrickPi.</description></item></channel></rss>