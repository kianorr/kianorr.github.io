<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web Development on SLC is</title><link>https://slc.is/tags/web-development/</link><description>Recent content in Web Development on SLC is</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 27 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://slc.is/tags/web-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating My Site</title><link>https://slc.is/archive/creating-my-site/</link><pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate><guid>https://slc.is/archive/creating-my-site/</guid><description>&lt;img src="https://slc.is/images/site.webp" alt="Featured image of post Creating My Site" />&lt;p>I bought my first domain through &lt;a class="link" href="https://domains.google.com" target="_blank" rel="noopener"
>Google Domains&lt;/a> and actually hosted my site through Google&amp;rsquo;s website builder. It really is a great free builder with solid &lt;!-- raw HTML omitted -->SEO&lt;!-- raw HTML omitted -->, but I&amp;rsquo;m a programmer, so I wanted to program.&lt;/p>
&lt;p>Distributed networks are an amazing technology, and I was drawn to IPFS hosting. I used &lt;a class="link" href="https://www.pinata.cloud/" target="_blank" rel="noopener"
>Pinata&lt;/a> to pin my new site, but when I tried using an HTTP request for a different page, it &lt;em>failed&lt;/em>. Instead of fetching pages dynamically, I created a site that downloaded every page on load. This was &lt;strong>not&lt;/strong> scalable. The method I ended up using for posts was incredibly simple, though. All I needed to do was create a javascript file and import it into &lt;code>script.js&lt;/code>.&lt;/p>
&lt;p>While still hosting on &lt;a class="link" href="ipfs://QmcHWkXpaBs8QB6EWBAWGANAsyq2gGhBQzosUsJECgyowm" >IPFS&lt;/a>, I connected my GitHub &lt;!-- raw HTML omitted -->repo&lt;!-- raw HTML omitted --> to Pinata and enjoyed automatic deployment; however, this was nearing my interest in &lt;a class="link" href="https://go.dev" target="_blank" rel="noopener"
>Go&lt;/a>. I saw how effective Go was for serving, so I decided to take my site off the IPFS network and deploy with Go.&lt;/p>
&lt;p>Now that I had a house-hold server hosting my website, I could begin to move toward a scalable design. Slowly but surely, I converted all posts to pure &lt;!-- raw HTML omitted -->.md&lt;!-- raw HTML omitted --> files and handled &lt;code>GET&lt;/code> requests from the server. At that point I had a fully functioning Go server, but I wasn&amp;rsquo;t finished yet.&lt;/p>
&lt;p>I moved from &lt;a class="link" href="https://splch.dev" target="_blank" rel="noopener"
>splch.dev&lt;/a> to &lt;a class="link" href="https://splch.net" target="_blank" rel="noopener"
>splch.net&lt;/a> and finally settled with &lt;a class="link" href="https://slc.is" target="_blank" rel="noopener"
>slc.is&lt;/a>. After learning more about &lt;!-- raw HTML omitted -->TLD&lt;!-- raw HTML omitted -->s, I realized I wouldn&amp;rsquo;t want to have a country with lax laws ultimately control my website. After searching for countries with the &lt;a class="link" href="https://slc.is/#The%20Best%20TLD%20is%20Not%20.com" >strongest privacy laws&lt;/a>, I settled with Iceland&amp;rsquo;s &lt;code>.is&lt;/code> TLD. With this strong domain name, I ventured forward in refining the website.&lt;/p>
&lt;p>Having to create new markdown files on the server was tedious and the website was created to simplify content creation. With a server, I could finally create posts from the website! I made it so I could click on the &lt;!-- raw HTML omitted -->Splch&lt;!-- raw HTML omitted --> logo and a markdown editor would appear &lt;em>(I&amp;rsquo;m using that very editor to write this post)&lt;/em>. With a simple &lt;code>POST&lt;/code> request, I verify and write the submitted post to a markdown file. In addition, the server returns markdown posts from a folder, so all that was required was to save the new markdown file in that &lt;code>posts/&lt;/code> folder and it would populate in the website.&lt;/p>
&lt;p>I&amp;rsquo;m sure more will come with the site, but having a built-in editor makes creating posts like these a breeze. To make the experience nicer, I started using &lt;a class="link" href="https://easy-markdown-editor.tk/" target="_blank" rel="noopener"
>EasyMDE&lt;/a> to create and edit posts, and &lt;a class="link" href="https://marked.js.org/" target="_blank" rel="noopener"
>Marked&lt;/a> to render the markdown to &lt;!-- raw HTML omitted -->HTML&lt;!-- raw HTML omitted -->. Then, &lt;a class="link" href="https://cure53.de/purify" target="_blank" rel="noopener"
>DOMPurify&lt;/a> sanitizes the HTML before populating. I also implemented &lt;a class="link" href="https://katex.org/" target="_blank" rel="noopener"
>KaTex&lt;/a> for math and &lt;a class="link" href="https://highlightjs.org/" target="_blank" rel="noopener"
>highlight.js&lt;/a> for code appearances:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">msg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hadamard Gate =&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\frac{1}{\sqrt{2}}
\begin{bmatrix}
1 &amp;amp; 1 \
1 &amp;amp; -1
\end{bmatrix}
$$&lt;/p>
&lt;p>It&amp;rsquo;s fun to have this framework for posting â€” I&amp;rsquo;m having a more positive experience using &lt;!-- raw HTML omitted -->CDN&lt;!-- raw HTML omitted -->s to host the external libraries. Not having to worry about updating libraries I&amp;rsquo;m using is relaxing as I can focus on improving my own scripts and posts. Clearly, I&amp;rsquo;m excited about this website and hope to share it with more people! I want to make this code open-source and create a helpful template site; however, I&amp;rsquo;ll first need to improve the code a bit. But I&amp;rsquo;m very happy to say that the major work is done and the functionality is here! ðŸ¥³&lt;/p>
&lt;p>Edit (9/6/2021) â€” I removed EasyMDE to decrease load times. I also render code with a Replit &lt;!-- raw HTML omitted -->IFrame&lt;!-- raw HTML omitted -->. The site is now open-source! Check out &lt;a class="link" href="https://slc.is/#Grokking%20Go" >this post&lt;/a> to see the server running or &lt;a class="link" href="https://github.com/splch/slc.is" target="_blank" rel="noopener"
>this repo&lt;/a> for the code! ðŸ¤©&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://img.shields.io/mozilla-observatory/grade/slc.is?publish&amp;amp;logo=mozilla&amp;amp;style=for-the-badge"
loading="lazy"
alt="Mozilla HTTP Observatory Grade"
>&lt;/p>
&lt;p>&lt;img src="https://img.shields.io/w3c-validation/default?logo=html5&amp;amp;style=for-the-badge&amp;amp;targetUrl=https%3A%2F%2Fslc.is"
loading="lazy"
alt="W3C Validation"
>&lt;/p>
&lt;p>&lt;img src="https://img.shields.io/github/go-mod/go-version/splch/slc.is?logo=go&amp;amp;style=for-the-badge"
loading="lazy"
alt="Go.mod Version"
>&lt;/p></description></item></channel></rss>