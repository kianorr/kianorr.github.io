<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Raspberry Pi on SLC is</title><link>https://slc.is/categories/raspberry-pi/</link><description>Recent content in Raspberry Pi on SLC is</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 11 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://slc.is/categories/raspberry-pi/index.xml" rel="self" type="application/rss+xml"/><item><title>Pirate's Folly</title><link>https://slc.is/posts/piratesfolly/</link><pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate><guid>https://slc.is/posts/piratesfolly/</guid><description>The Raspberry Pi Pico inspired the release of the Picosystem. I love working with limited hardware as a challenge to improve my programming. I&amp;rsquo;ve had my fair share of 6502 assembly for the NES but recently enjoyed the new RP2040. The Picosystem uses the RP2040 to run games, so I just had to try it out!
I began development of Pirate&amp;rsquo;s Folly, a procedurally generated game. I&amp;rsquo;ve laid the groundwork for terrain and item generation; however, enemy placement is still needed.</description></item><item><title>Efficient Solar-Powered Website</title><link>https://slc.is/posts/solarpoweredsite/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><guid>https://slc.is/posts/solarpoweredsite/</guid><description>After seeing Kris&amp;rsquo; solar-powered website, I decided I wanted my own to be the same. This conveniently followed the release of the Raspberry Pi Zero 2 W, a low-power SoC. I purchased this board since I doubt my website will warrant anything stronger than a Raspberry Pi and it enables solar-power with its small energy footprint.
There is a thorough article comparing servers&amp;rsquo; abilities handling different types of data; however, I opted to use Go&amp;rsquo;s built-in web server.</description></item><item><title>Assembly Neural Network on Pico</title><link>https://slc.is/posts/assemblypico/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://slc.is/posts/assemblypico/</guid><description>I&amp;rsquo;ve been using the Raspberry Pi Foundation&amp;rsquo;s products for almost a decade now, but they only recently released their first microcontroller. Their custom RP2040 has an ARM Cortex-M0+ chip that, obviously, uses ARM assembly. I&amp;rsquo;ve been wanting to learn assembly and this is definitely a great opportunity to do so.
The goal is to code a very basic neural network in assembly.
I want to make a simple neural network, and luckily the Pico has a multiplication instruction (unlike the 6502 processor).</description></item><item><title>Raspberry Pi and Caenorhabditis Elegans</title><link>https://slc.is/posts/wormpi/</link><pubDate>Sat, 20 Aug 2016 00:00:00 +0000</pubDate><guid>https://slc.is/posts/wormpi/</guid><description>One of my first projects was AI projects was taking the OpenWorm C. Elegans brain map and connecting it to a Raspberry Pi. The Pi was integrated with Lego Mindstorms, so the Lego motors would move in the direction the worm wanted to go.
# BrickPi3 Worm Brain # Written by Spencer Churchill 2016, in Python 2.7 # The BrickPi3 Worm Brain uses a Postsynaptic dictionary based on the C Elegans Connectome Model # This application can be ran on the Raspberry Pi BrickPi robot with an ultrasonic sensor that represents Nose Touch when activated from BrickPi import * import time BrickPiSetup() # setup the serial port for communication BrickPi.</description></item></channel></rss>